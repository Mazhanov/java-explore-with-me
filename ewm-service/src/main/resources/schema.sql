DROP TABLE IF EXISTS event_compilation, compilation, request, comment, event, users, category;

CREATE TABLE IF NOT EXISTS users (
    user_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(250) NOT NULL,
    email VARCHAR(254) UNIQUE NOT NULL
);

CREATE TABLE IF NOT EXISTS category (
    category_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(50) UNIQUE NOT NULL
);

CREATE TABLE IF NOT EXISTS event (
    event_id           INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    annotation         VARCHAR(2000) NOT NULL,
    category_id        BIGINT        NOT NULL,
    initiator_id       BIGINT        NOT NULL,
    description        VARCHAR(7000) NOT NULL,
    event_date         TIMESTAMP     NOT NULL,
    latitude           FLOAT         NOT NULL,
    longitude          FLOAT         NOT NULL,
    paid               BOOLEAN       NOT NULL,
    participant_limit  INTEGER       NOT NULL,
    request_moderation BOOLEAN       NOT NULL,
    title              VARCHAR(120)  NOT NULL,
    state              VARCHAR(15)   NOT NULL,
    created_on         TIMESTAMP     NOT NULL,
    published_on       TIMESTAMP,
    FOREIGN KEY (category_id) REFERENCES category (category_id) ON DELETE RESTRICT,
    FOREIGN KEY (initiator_id) REFERENCES users (user_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS request (
    request_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    event_id INTEGER NOT NULL,
    requester_id INTEGER NOT NULL,
    created TIMESTAMP WITH TIME ZONE NOT NULL,
    status VARCHAR(20) NOT NULL,
    FOREIGN KEY (event_id) REFERENCES event(event_id) ON DELETE CASCADE,
    FOREIGN KEY (requester_id) REFERENCES users(user_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS compilation (
    compilation_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    pinned BOOLEAN,
    title VARCHAR(120) NOT NULL
);

CREATE TABLE IF NOT EXISTS event_compilation (
    event_id INTEGER NOT NULL,
    compilation_id INTEGER NOT NULL,
    FOREIGN KEY (event_id) REFERENCES event(event_id) ON DELETE CASCADE,
    FOREIGN KEY (compilation_id) REFERENCES compilation(compilation_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS comment (
    comment_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    event_id INTEGER NOT NULL,
    author_id INTEGER NOT NULL,
    text_comment VARCHAR(1500) NOT NULL,
    created_on TIMESTAMP WITH TIME ZONE NOT NULL,
    state VARCHAR(20) NOT NULL,
    FOREIGN KEY (event_id) REFERENCES event(event_id) ON DELETE CASCADE,
    FOREIGN KEY (author_id) REFERENCES users(user_id) ON DELETE CASCADE
);